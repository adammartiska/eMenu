{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js\",\n    _s = $RefreshSig$();\n\nimport MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n};\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  const drinks = useSelector(state => state.cart.drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(id => setDrinksOrder({ ...drinksOrder,\n    [id]: ++drinksOrder[id]\n  }), [drinksOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback(id => dispatch(addToCart({\n    id,\n    value: drinksOrder[id]\n  })), [drinksOrder, dispatch]);\n  {\n    /* <div className=\"drinks-menu-page-wrapper\">\n    <CartItem\n    id=\"cocaCola\"\n    onAddButtonClick={handleAddButtonClick}\n    onRemoveButtonClick={handleRemoveButtonClick}\n    onAddToBagClick={handleAddToBag}\n    name=\"Coca Cola\"\n    count={drinksOrder.cocaCola}\n    price=\"12.80\"\n    />\n    </div> */\n  }\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"A basic table example with a caption\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"GQlfwO8jv7MsWn891JFXh5Pf5Qc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js"],"names":["MenuItem","CartItem","MenuItem3","useDispatch","useSelector","React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","DataGridPro","addToCart","initialState","cocaCola","sprite","fanta","tonic","DrinksMenuPage","drinks","state","cart","dispatch","drinksOrder","setDrinksOrder","useState","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","value","minWidth","rows","map","row","name","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\nconst DrinksMenuPage = () => {\n  const drinks = useSelector((state) => state.cart.drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: ++drinksOrder[id],\n      }),\n    [drinksOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id) => dispatch(addToCart({ id, value: drinksOrder[id] })),\n    [drinksOrder, dispatch]\n  );\n\n  { /* <div className=\"drinks-menu-page-wrapper\">\n  <CartItem\n    id=\"cocaCola\"\n    onAddButtonClick={handleAddButtonClick}\n    onRemoveButtonClick={handleRemoveButtonClick}\n    onAddToBagClick={handleAddToBag}\n    name=\"Coca Cola\"\n    count={drinksOrder.cocaCola}\n    price=\"12.80\"\n  />\n</div> */ }\n\n  return (\n    <TableContainer component={Paper}>\n    <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\n      <caption>A basic table example with a caption</caption>\n      <TableHead>\n        <TableRow>\n          <TableCell>Dessert (100g serving)</TableCell>\n          <TableCell align=\"right\">Calories</TableCell>\n          <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n          <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n          <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row) => (\n          <TableRow key={row.name}>\n            <TableCell component=\"th\" scope=\"row\">\n              {row.name}\n            </TableCell>\n            <TableCell align=\"right\">{row.calories}</TableCell>\n            <TableCell align=\"right\">{row.fat}</TableCell>\n            <TableCell align=\"right\">{row.carbs}</TableCell>\n            <TableCell align=\"right\">{row.protein}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n  );\n};\n\n\n\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}