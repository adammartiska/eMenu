{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n};\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  const drinks = useSelector(state => state.cart.drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(id => setDrinksOrder({ ...drinksOrder,\n    [id]: ++drinksOrder[id]\n  }), [drinksOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback(id => dispatch(addToCart({\n    id,\n    value: drinksOrder[id]\n  })), [drinksOrder, dispatch]);\n  {\n    /* <div className=\"drinks-menu-page-wrapper\">\n    <CartItem\n    id=\"cocaCola\"\n    onAddButtonClick={handleAddButtonClick}\n    onRemoveButtonClick={handleRemoveButtonClick}\n    onAddToBagClick={handleAddToBag}\n    name=\"Coca Cola\"\n    count={drinksOrder.cocaCola}\n    price=\"12.80\"\n    />\n    </div> */\n  }\n  return /*#__PURE__*/_jsxDEV(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    checkboxSelection: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"GQlfwO8jv7MsWn891JFXh5Pf5Qc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js"],"names":["React","MenuItem","CartItem","MenuItem3","useDispatch","useSelector","addToCart","initialState","cocaCola","sprite","fanta","tonic","DrinksMenuPage","drinks","state","cart","dispatch","drinksOrder","setDrinksOrder","useState","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","value","rows","columns"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,yBAAP,C,CAEA;AACA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CADS;AAEnBC,EAAAA,MAAM,EAAE,CAFW;AAGnBC,EAAAA,KAAK,EAAE,CAHY;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,MAAM,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,MAAvB,CAA1B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACmB,QAAN,CAAeZ,YAAf,CAAtC;AACA,QAAMa,oBAAoB,GAAGpB,KAAK,CAACqB,WAAN,CAC1BC,EAAD,IACEJ,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,KAACK,EAAD,GAAM,EAAEL,WAAW,CAACK,EAAD;AAFN,GAAD,CAFW,EAM3B,CAACL,WAAD,CAN2B,CAA7B;AASA,QAAMM,uBAAuB,GAAGvB,KAAK,CAACqB,WAAN,CAC7BC,EAAD,IAAQ;AACN,QAAIL,WAAW,CAACK,EAAD,CAAX,KAAoB,CAAxB,EAA2B;AACzB;AACD;;AACDJ,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,OAACK,EAAD,GAAM,EAAEL,WAAW,CAACK,EAAD;AAFN,KAAD,CAAd;AAID,GAT6B,EAU9B,CAACL,WAAD,CAV8B,CAAhC,CAb2B,CA0B3B;;AACA,QAAMO,cAAc,GAAGxB,KAAK,CAACqB,WAAN,CACpBC,EAAD,IAAQN,QAAQ,CAACV,SAAS,CAAC;AAAEgB,IAAAA,EAAF;AAAMG,IAAAA,KAAK,EAAER,WAAW,CAACK,EAAD;AAAxB,GAAD,CAAV,CADK,EAErB,CAACL,WAAD,EAAcD,QAAd,CAFqB,CAAvB;AAKA;AAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAW;AACT,sBACE,QAAC,QAAD;AACA,IAAA,IAAI,EAAEU,IADN;AAEA,IAAA,OAAO,EAAEC,OAFT;AAGA,IAAA,QAAQ,EAAE,CAHV;AAIA,IAAA,kBAAkB,EAAE,CAAC,CAAD,CAJpB;AAKA,IAAA,iBAAiB;AALjB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApDD;;GAAMf,c;UACWP,W,EACED,W;;;KAFbQ,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\nconst DrinksMenuPage = () => {\n  const drinks = useSelector((state) => state.cart.drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: ++drinksOrder[id],\n      }),\n    [drinksOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id) => dispatch(addToCart({ id, value: drinksOrder[id] })),\n    [drinksOrder, dispatch]\n  );\n\n  { /* <div className=\"drinks-menu-page-wrapper\">\n  <CartItem\n    id=\"cocaCola\"\n    onAddButtonClick={handleAddButtonClick}\n    onRemoveButtonClick={handleRemoveButtonClick}\n    onAddToBagClick={handleAddToBag}\n    name=\"Coca Cola\"\n    count={drinksOrder.cocaCola}\n    price=\"12.80\"\n  />\n</div> */ }\n  return (\n    <DataGrid\n    rows={rows}\n    columns={columns}\n    pageSize={5}\n    rowsPerPageOptions={[5]}\n    checkboxSelection\n  />\n  );\n};\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}