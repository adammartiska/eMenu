{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst findRelevantDrinkIndex = (drinks, id) => {\n  console.log(drinks);\n  console.log(id);\n  const drinkIndex = drinks.findIndex(drink => drink.id === id);\n  return drinks[drinkIndex];\n};\n\nexport const drinksSlice = createSlice({\n  name: \"drinks\",\n  initialState: {\n    drinks: []\n  },\n  reducers: {\n    addToCart: (state, {\n      payload\n    }) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.adrinks = [...state.drinks, payload];\n    },\n    incrementCount: (state, {\n      payload\n    }) => {\n      const newState = { ...state\n      };\n      console.log(newState.drinks);\n      console.log(newState);\n      console.log(payload);\n    } // decrement: (state) => {\n    //   state.value -= 1\n    // },\n    // incrementByAmount: (state, action) => {\n    //   state.value += action.payload\n    // },\n\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addToCart,\n  decrement,\n  incrementCount\n} = drinksSlice.actions;\nexport default drinksSlice.reducer;","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/src/pages/drinksSlice.js"],"names":["createSlice","findRelevantDrinkIndex","drinks","id","console","log","drinkIndex","findIndex","drink","drinksSlice","name","initialState","reducers","addToCart","state","payload","adrinks","incrementCount","newState","decrement","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,sBAAsB,GAAG,CAACC,MAAD,EAASC,EAAT,KAAgB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAMG,UAAU,GAAGJ,MAAM,CAACK,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaA,EAAzC,CAAnB;AACA,SAAOD,MAAM,CAACI,UAAD,CAAb;AACD,CALD;;AAOA,OAAO,MAAMG,WAAW,GAAGT,WAAW,CAAC;AACrCU,EAAAA,IAAI,EAAE,QAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZT,IAAAA,MAAM,EAAE;AADI,GAFuB;AAKrCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACjC;AACA;AACA;AACA;AACAD,MAAAA,KAAK,CAACE,OAAN,GAAgB,CAAC,GAAGF,KAAK,CAACZ,MAAV,EAAkBa,OAAlB,CAAhB;AACD,KAPO;AAQRE,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACtC,YAAMG,QAAQ,GAAG,EAAE,GAAGJ;AAAL,OAAjB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYa,QAAQ,CAAChB,MAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACD,KAbO,CAcR;AACA;AACA;AACA;AACA;AACA;;AAnBQ;AAL2B,CAAD,CAA/B,C,CA4BP;;AACA,OAAO,MAAM;AAAEF,EAAAA,SAAF;AAAaM,EAAAA,SAAb;AAAwBF,EAAAA;AAAxB,IAA2CR,WAAW,CAACW,OAA7D;AAEP,eAAeX,WAAW,CAACY,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst findRelevantDrinkIndex = (drinks, id) => {\n  console.log(drinks);\n  console.log(id);\n  const drinkIndex = drinks.findIndex((drink) => drink.id === id);\n  return drinks[drinkIndex];\n};\n\nexport const drinksSlice = createSlice({\n  name: \"drinks\",\n  initialState: {\n    drinks: [],\n  },\n  reducers: {\n    addToCart: (state, { payload }) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.adrinks = [...state.drinks, payload];\n    },\n    incrementCount: (state, { payload }) => {\n      const newState = { ...state };\n      console.log(newState.drinks)\n      console.log(newState);\n      console.log(payload);\n    },\n    // decrement: (state) => {\n    //   state.value -= 1\n    // },\n    // incrementByAmount: (state, action) => {\n    //   state.value += action.payload\n    // },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addToCart, decrement, incrementCount } = drinksSlice.actions;\n\nexport default drinksSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}