{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js\",\n    _s = $RefreshSig$();\n\nimport MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n};\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  const rowData = [{\n    name: \"Coca Cola\",\n    count: 3,\n    price: 12.8\n  }];\n  const rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0), createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3), createData(\"Eclair\", 262, 16.0, 24, 6.0)];\n  const drinks = useSelector(state => state.cart.drinks);\n  console.log(drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback(id => dispatch(addToCart({\n    id,\n    value: drinksOrder[id]\n  })), [drinksOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Polozka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Mnozstvo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Cena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: drinks.map(({\n          name,\n          count,\n          price\n        }) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [price * count, \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"0O6N3456wR8u7qp1PUVJLuykec0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/src/pages/checkout-page.js"],"names":["MenuItem","CartItem","MenuItem3","useDispatch","useSelector","React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","addToCart","initialState","cocaCola","sprite","fanta","tonic","DrinksMenuPage","createData","name","calories","fat","carbs","protein","rowData","count","price","rows","drinks","state","cart","console","log","dispatch","drinksOrder","setDrinksOrder","useState","handleRemoveButtonClick","useCallback","id","handleAddToBag","value","map"],"mappings":"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","sourcesContent":["import MenuItem from \"../components/MenuItem\";\nimport CartItem from \"../components/CartItem\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { addToCart } from \"./drinksSlice\";\nimport \"./drinks-menu-page.scss\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\nconst DrinksMenuPage = () => {\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n\n  const rowData = [\n    {\n      name: \"Coca Cola\",\n      count: 3,\n      price: 12.8,\n    },\n  ];\n\n  const rows = [\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  ];\n  const drinks = useSelector((state) => state.cart.drinks);\n  console.log(drinks);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id) => dispatch(addToCart({ id, value: drinksOrder[id] })),\n    [drinksOrder, dispatch]\n  );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"caption table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Polozka</TableCell>\n            <TableCell align=\"center\">Mnozstvo</TableCell>\n            <TableCell align=\"right\">Cena</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {drinks.map(({ name, count, price }) => (\n            <TableRow key={name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {name}\n              </TableCell>\n              <TableCell align=\"center\">{count}</TableCell>\n              <TableCell align=\"right\">{price * count} €</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}