{"ast":null,"code":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/move.js"],"names":["_curry3","move","from","to","list","length","result","slice","positiveFrom","positiveTo","item","splice","concat"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GACR,aACAD,OAAO,CAAC,UAAUE,IAAV,EAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AAChC,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,MAAIC,MAAM,GAAGF,IAAI,CAACG,KAAL,EAAb;AACA,MAAIC,YAAY,GAAGN,IAAI,GAAG,CAAP,GAAWG,MAAM,GAAGH,IAApB,GAA2BA,IAA9C;AACA,MAAIO,UAAU,GAAGN,EAAE,GAAG,CAAL,GAASE,MAAM,GAAGF,EAAlB,GAAuBA,EAAxC;AACA,MAAIO,IAAI,GAAGJ,MAAM,CAACK,MAAP,CAAcH,YAAd,EAA4B,CAA5B,CAAX;AACA,SAAOA,YAAY,GAAG,CAAf,IAAoBA,YAAY,IAAIJ,IAAI,CAACC,MAAzC,IAAmDI,UAAU,GAAG,CAAhE,IAAqEA,UAAU,IAAIL,IAAI,CAACC,MAAxF,GAAiGD,IAAjG,GAAwG,GAAGQ,MAAH,CAAUN,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgBE,UAAhB,CAAV,EAAuCG,MAAvC,CAA8CF,IAA9C,EAAoDE,MAApD,CAA2DN,MAAM,CAACC,KAAP,CAAaE,UAAb,EAAyBL,IAAI,CAACC,MAA9B,CAA3D,CAA/G;AACD,CAPM,CAFP;;AAWA,eAAeJ,IAAf","sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;"]},"metadata":{},"sourceType":"module"}