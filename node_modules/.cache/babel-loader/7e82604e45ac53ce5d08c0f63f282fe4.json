{"ast":null,"code":"import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n\n\n      const variableDefinitions = (_operationNode$variab = operationNode.variableDefinitions) !== null && _operationNode$variab !== void 0 ? _operationNode$variab : [];\n      const seenVariableDefinitions = groupBy(variableDefinitions, node => node.variable.name.value);\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(new GraphQLError(`There can be only one variable named \"$${variableName}\".`, variableNodes.map(node => node.variable.name)));\n        }\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs"],"names":["groupBy","GraphQLError","UniqueVariableNamesRule","context","OperationDefinition","operationNode","_operationNode$variab","variableDefinitions","seenVariableDefinitions","node","variable","name","value","variableName","variableNodes","length","reportError","map"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,SAAO;AACLC,IAAAA,mBAAmB,CAACC,aAAD,EAAgB;AACjC,UAAIC,qBAAJ,CADiC,CAGjC;;;AACA,YAAMC,mBAAmB,GACvB,CAACD,qBAAqB,GAAGD,aAAa,CAACE,mBAAvC,MAAgE,IAAhE,IACAD,qBAAqB,KAAK,KAAK,CAD/B,GAEIA,qBAFJ,GAGI,EAJN;AAKA,YAAME,uBAAuB,GAAGR,OAAO,CACrCO,mBADqC,EAEpCE,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBC,KAFQ,CAAvC;;AAKA,WAAK,MAAM,CAACC,YAAD,EAAeC,aAAf,CAAX,IAA4CN,uBAA5C,EAAqE;AACnE,YAAIM,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BZ,UAAAA,OAAO,CAACa,WAAR,CACE,IAAIf,YAAJ,CACG,0CAAyCY,YAAa,IADzD,EAEEC,aAAa,CAACG,GAAd,CAAmBR,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,IAA1C,CAFF,CADF;AAMD;AACF;AACF;;AAzBI,GAAP;AA2BD","sourcesContent":["import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              variableNodes.map((node) => node.variable.name),\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}