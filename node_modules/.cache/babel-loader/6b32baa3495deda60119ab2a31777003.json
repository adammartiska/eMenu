{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheMeals } from \"./mealsSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport { find } from \"ramda\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport burgerUrl from \"./burger.jpeg\";\nimport { getMealById } from \"../utils/utils\";\nimport Counter from \"../components/Counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const mealsOrder = useSelector(state => {\n    var _state$meals;\n\n    return state === null || state === void 0 ? void 0 : (_state$meals = state.meals) === null || _state$meals === void 0 ? void 0 : _state$meals.mealOrder;\n  });\n  const {\n    data: meals,\n    error,\n    loading\n  } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [isAdditionalOrderInfo, setIsAdditionalOrderInfo] = React.useState(false);\n  const [additionalorderInfo, setAdditionalOrderInfo] = React.useState(null);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] = React.useState(null);\n  const [currentMealCount, setCurrentMealCount] = React.useState(1);\n  const dispatch = useDispatch();\n\n  const toggleDrawer = function (open) {\n    let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return event => {\n      if (open) {\n        var _maybeMeal$count;\n\n        const maybeMeal = getMealById(id, mealsOrder);\n        setIsAdditionalOrderInfo(false);\n        setCurrentMealCount((_maybeMeal$count = maybeMeal === null || maybeMeal === void 0 ? void 0 : maybeMeal.count) !== null && _maybeMeal$count !== void 0 ? _maybeMeal$count : 1);\n      }\n\n      setCurrentlyOpenedMealId(id);\n      setShowDrawer(open);\n    };\n  };\n\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheMeals(meals));\n  }, [meals, dispatch]);\n  const handleAddButtonClick = React.useCallback(id => setMealOrder({ ...mealOrder,\n    [id]: ++mealOrder[id]\n  }), [mealOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (mealOrder[id] === 0) {\n      return;\n    }\n\n    setMealOrder({ ...mealOrder,\n      [id]: --mealOrder[id]\n    });\n  }, [mealOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback(() => {\n    dispatch(addToCart({\n      id: currentlyOpenedMealId,\n      count: currentMealCount,\n      additionalorderInfo: additionalorderInfo !== null && additionalorderInfo !== void 0 ? additionalorderInfo : undefined\n    }));\n    setShowDrawer(false);\n  }, [currentlyOpenedMealId, currentMealCount, additionalorderInfo, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-menu-page-wrapper\",\n    children: [meals === null || meals === void 0 ? void 0 : meals.meals.map(_ref => {\n      let {\n        id,\n        name,\n        price\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(FoodCard, {\n        id: id // onAddButtonClick={handleAddButtonClick}\n        // onRemoveButtonClick={handleRemoveButtonClick}\n        // onAddToBagClick={handleAddToBag}\n        ,\n        title: name,\n        count: mealOrder.cocaCola,\n        price: price,\n        onClick: toggleDrawer(true, id) //onClick={(id) => console.log(id)}\n\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SwipeableBottomDrawer, {\n      isMeal: false,\n      showDrawer: showDrawer,\n      setShowDrawer: setShowDrawer,\n      handleAddToBag: handleAddToBag,\n      currentlyOpenedItemId: currentlyOpenedDrinkId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"vrNLXE0rLttBbPFw4aOJFPVhNLs=\", false, function () {\n  return [useSelector, useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","useDispatch","useSelector","addToCart","cacheMeals","useMealsQuery","find","FoodCard","Box","Paper","Typography","SwipeableDrawer","Button","Checkbox","FormControlLabel","TextareaAutosize","TextField","Divider","AddShoppingCartIcon","burgerUrl","getMealById","Counter","FoodMenuPage","mealsOrder","state","meals","mealOrder","data","error","loading","setMealOrder","useState","showDrawer","setShowDrawer","isAdditionalOrderInfo","setIsAdditionalOrderInfo","additionalorderInfo","setAdditionalOrderInfo","currentlyOpenedMealId","setCurrentlyOpenedMealId","currentMealCount","setCurrentMealCount","dispatch","toggleDrawer","open","id","event","maybeMeal","count","useEffect","handleAddButtonClick","useCallback","handleRemoveButtonClick","handleAddToBag","undefined","map","name","price","cocaCola","currentlyOpenedDrinkId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheMeals } from \"./mealsSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport { find } from \"ramda\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport burgerUrl from \"./burger.jpeg\";\nimport { getMealById } from \"../utils/utils\";\nimport Counter from \"../components/Counter\";\n\nconst FoodMenuPage = () => {\n  const mealsOrder = useSelector((state) => state?.meals?.mealOrder);\n  const { data: meals, error, loading } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [isAdditionalOrderInfo, setIsAdditionalOrderInfo] =\n    React.useState(false);\n  const [additionalorderInfo, setAdditionalOrderInfo] = React.useState(null);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] =\n    React.useState(null);\n  const [currentMealCount, setCurrentMealCount] = React.useState(1);\n  const dispatch = useDispatch();\n  const toggleDrawer =\n    (open, id = null) =>\n    (event) => {\n      if (open) {\n        const maybeMeal = getMealById(id, mealsOrder);\n        setIsAdditionalOrderInfo(false);\n        setCurrentMealCount(maybeMeal?.count ?? 1);\n      }\n      setCurrentlyOpenedMealId(id);\n      setShowDrawer(open);\n    };\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheMeals(meals));\n  }, [meals, dispatch]);\n\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setMealOrder({\n        ...mealOrder,\n        [id]: ++mealOrder[id],\n      }),\n    [mealOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (mealOrder[id] === 0) {\n        return;\n      }\n      setMealOrder({\n        ...mealOrder,\n        [id]: --mealOrder[id],\n      });\n    },\n    [mealOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(() => {\n    dispatch(\n      addToCart({\n        id: currentlyOpenedMealId,\n        count: currentMealCount,\n        additionalorderInfo: additionalorderInfo ?? undefined,\n      })\n    );\n    setShowDrawer(false);\n  }, [currentlyOpenedMealId, currentMealCount, additionalorderInfo, dispatch]);\n  return (\n    <div className=\"food-menu-page-wrapper\">\n      {meals?.meals.map(({ id, name, price }) => (\n        <FoodCard\n          key={id}\n          id={id}\n          // onAddButtonClick={handleAddButtonClick}\n          // onRemoveButtonClick={handleRemoveButtonClick}\n          // onAddToBagClick={handleAddToBag}\n          title={name}\n          count={mealOrder.cocaCola}\n          price={price}\n          onClick={toggleDrawer(true, id)}\n          //onClick={(id) => console.log(id)}\n        />\n      ))}\n      <SwipeableBottomDrawer\n        isMeal={false}\n        showDrawer={showDrawer}\n        setShowDrawer={setShowDrawer}\n        handleAddToBag={handleAddToBag}\n        currentlyOpenedItemId={currentlyOpenedDrinkId}\n      />\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}