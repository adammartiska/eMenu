{"ast":null,"code":"import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/internal/_toString.js"],"names":["_includes","_map","_quote","_toISOString","keys","reject","_toString","x","seen","recur","y","xs","concat","mapPairs","obj","k","slice","sort","Object","prototype","toString","call","join","test","valueOf","isNaN","NaN","Infinity","repr"],"mappings":"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","sourcesContent":["import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}"]},"metadata":{},"sourceType":"module"}