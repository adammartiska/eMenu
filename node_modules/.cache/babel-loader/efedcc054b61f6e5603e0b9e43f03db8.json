{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport Drawer from '@mui/material/Drawer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const toggleDrawer = open => event => {\n    setShowDrawer(true);\n  };\n\n  const handleAddButtonClick = React.useCallback(id => setMealOrder({ ...mealOrder,\n    [id]: ++mealOrder[id]\n  }), [mealOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (mealOrder[id] === 0) {\n      return;\n    }\n\n    setMealOrder({ ...mealOrder,\n      [id]: --mealOrder[id]\n    });\n  }, [mealOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: mealOrder[id],\n    price\n  })), [mealOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-menu-page-wrapper\",\n    children: [data === null || data === void 0 ? void 0 : data.meals.map(({\n      id,\n      name,\n      price\n    }) => /*#__PURE__*/_jsxDEV(FoodCard, {\n      id: id // onAddButtonClick={handleAddButtonClick}\n      // onRemoveButtonClick={handleRemoveButtonClick}\n      // onAddToBagClick={handleAddToBag}\n      ,\n      title: name,\n      count: mealOrder.cocaCola,\n      price: price,\n      onClick: toggleDrawer(true) //onClick={(id) => console.log(id)}\n\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: anchor,\n        open: showDrawer,\n        onClose: toggleDrawer(anchor, false),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"Ly7coexNqWMxucfb1ZE5jzzec2o=\", false, function () {\n  return [useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","useDispatch","useSelector","addToCart","useMealsQuery","FoodCard","Drawer","FoodMenuPage","data","error","loading","mealOrder","setMealOrder","useState","showDrawer","setShowDrawer","dispatch","toggleDrawer","open","event","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","name","price","count","meals","map","cocaCola","anchor","list"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,aAAa,EAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACa,QAAN,CAAe,KAAf,CAApC;AACA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;;AAGA,QAAMgB,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACtCJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMK,oBAAoB,GAAGpB,KAAK,CAACqB,WAAN,CAC1BC,EAAD,IACEV,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,KAACW,EAAD,GAAM,EAAEX,SAAS,CAACW,EAAD;AAFN,GAAD,CAFa,EAM3B,CAACX,SAAD,CAN2B,CAA7B;AASA,QAAMY,uBAAuB,GAAGvB,KAAK,CAACqB,WAAN,CAC7BC,EAAD,IAAQ;AACN,QAAIX,SAAS,CAACW,EAAD,CAAT,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AACDV,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACW,EAAD,GAAM,EAAEX,SAAS,CAACW,EAAD;AAFN,KAAD,CAAZ;AAID,GAT6B,EAU9B,CAACX,SAAD,CAV8B,CAAhC,CApByB,CAiCzB;;AACA,QAAMa,cAAc,GAAGxB,KAAK,CAACqB,WAAN,CACrB,CAACC,EAAD,EAAKG,IAAL,EAAWC,KAAX,KACEV,QAAQ,CAACb,SAAS,CAAC;AAAEmB,IAAAA,EAAF;AAAMG,IAAAA,IAAN;AAAYE,IAAAA,KAAK,EAAEhB,SAAS,CAACW,EAAD,CAA5B;AAAkCI,IAAAA;AAAlC,GAAD,CAAV,CAFW,EAGrB,CAACf,SAAD,EAAYK,QAAZ,CAHqB,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,eACGR,IADH,aACGA,IADH,uBACGA,IAAI,CAAEoB,KAAN,CAAYC,GAAZ,CAAgB,CAAC;AAAEP,MAAAA,EAAF;AAAMG,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACf,QAAC,QAAD;AAEE,MAAA,EAAE,EAAEJ,EAFN,CAGE;AACA;AACA;AALF;AAME,MAAA,KAAK,EAAEG,IANT;AAOE,MAAA,KAAK,EAAEd,SAAS,CAACmB,QAPnB;AAQE,MAAA,KAAK,EAAEJ,KART;AASE,MAAA,OAAO,EAAET,YAAY,CAAC,IAAD,CATvB,CAUE;;AAVF,OACOK,EADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAeE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,YAAY,CAACc,MAAD,EAAS,IAAT,CAA7B;AAAA,kBAA8CA;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,IAAI,EAAEjB,UAFR;AAGE,QAAA,OAAO,EAAEG,YAAY,CAACc,MAAD,EAAS,KAAT,CAHvB;AAAA,kBAKGC,IAAI,CAACD,MAAD;AALP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnED;;GAAMxB,Y;UAC6BH,a,EAGhBH,W;;;KAJbM,Y;AAqEN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport Drawer from '@mui/material/Drawer';\n\nconst FoodMenuPage = () => {\n  const { data, error, loading } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false)\n  const dispatch = useDispatch();\n\n  \n  const toggleDrawer = (open) => (event) => {\n      setShowDrawer(true)\n  };\n\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setMealOrder({\n        ...mealOrder,\n        [id]: ++mealOrder[id],\n      }),\n    [mealOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (mealOrder[id] === 0) {\n        return;\n      }\n      setMealOrder({\n        ...mealOrder,\n        [id]: --mealOrder[id],\n      });\n    },\n    [mealOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: mealOrder[id], price })),\n    [mealOrder, dispatch]\n  );\n  return (\n    <div className=\"food-menu-page-wrapper\">\n      {data?.meals.map(({ id, name, price }) => (\n        <FoodCard\n          key={id}\n          id={id}\n          // onAddButtonClick={handleAddButtonClick}\n          // onRemoveButtonClick={handleRemoveButtonClick}\n          // onAddToBagClick={handleAddToBag}\n          title={name}\n          count={mealOrder.cocaCola}\n          price={price}\n          onClick={toggleDrawer(true)}\n          //onClick={(id) => console.log(id)}\n        />\n      ))}\n      <React.Fragment>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer\n            anchor={anchor}\n            open={showDrawer}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}