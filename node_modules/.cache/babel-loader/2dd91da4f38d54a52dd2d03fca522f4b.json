{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      var _this$previousSelect; // Memoize select result\n\n\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === ((_this$previousSelect = this.previousSelect) == null ? void 0 : _this$previousSelect.fn) && !this.previousSelectError) {\n        data = this.previousSelect.result;\n      } else {\n        try {\n          data = options.select(state.data);\n          this.previousSelect = {\n            fn: options.select,\n            result: data\n          };\n\n          if (options.structuralSharing !== false) {\n            data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n          }\n\n          this.previousSelectError = null;\n        } catch (selectError) {\n          getLogger().error(selectError);\n          error = selectError;\n          this.previousSelectError = selectError;\n          errorUpdatedAt = Date.now();\n          status = 'error';\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/react-query/es/core/queryObserver.js"],"names":["_extends","_inheritsLoose","isServer","isValidTimeout","noop","replaceEqualDeep","shallowEqualObjects","timeUntilStale","notifyManager","focusManager","Subscribable","getLogger","isCancelledError","QueryObserver","_Subscribable","client","options","_this","call","trackedProps","previousSelectError","bindMethods","setOptions","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","_shouldFetchOnReconnect","shouldFetchOnWindowFocus","_shouldFetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","enabled","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","query","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","trackProp","key","includes","push","Object","keys","forEach","defineProperty","configurable","enumerable","get","useErrorBoundary","suspense","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","meta","refetchPage","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","_this6","clearStaleTimeout","isStale","time","dataUpdatedAt","timeout","staleTimeoutId","setTimeout","_this$options$refetch","refetchInterval","data","nextInterval","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","isFocused","clearTimeout","undefined","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","_this$previousSelect","previousSelect","fn","structuralSharing","selectError","Date","now","placeholderData","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","typedKey","changed","isIncluded","x","isExcluded","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","onSuccess","onError","_this8","batch","onSettled","listener","shouldLoadOnMount","retryOnMount","shouldRefetchOnMount","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","isStaleByTime"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        var _this$previousSelect;\n\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === ((_this$previousSelect = this.previousSelect) == null ? void 0 : _this$previousSelect.fn) && !this.previousSelectError) {\n          data = this.previousSelect.result;\n        } else {\n          try {\n            data = options.select(state.data);\n            this.previousSelect = {\n              fn: options.select,\n              result: data\n            };\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}"]},"metadata":{},"sourceType":"module"}