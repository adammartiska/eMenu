{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const dispatch = useDispatch();\n  const handleAddButtonClick = React.useCallback(id => setMealOrder({ ...mealOrder,\n    [id]: ++mealOrder[id]\n  }), [mealOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (mealOrder[id] === 0) {\n      return;\n    }\n\n    setMealOrder({ ...mealOrder,\n      [id]: --mealOrder[id]\n    });\n  }, [mealOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: mealOrder[id],\n    price\n  })), [mealOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinks-menu-page-wrapper\",\n    children: data === null || data === void 0 ? void 0 : data.meals.map(({\n      id,\n      name,\n      price\n    }) => /*#__PURE__*/_jsxDEV(MenuItem3, {\n      id: id,\n      onAddButtonClick: handleAddButtonClick,\n      onRemoveButtonClick: handleRemoveButtonClick,\n      onAddToBagClick: handleAddToBag,\n      name: name,\n      count: mealOrder.cocaCola,\n      price: price\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"Nz3VYhoHucxFxTmenamZ8gMA2Eo=\", false, function () {\n  return [useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","MenuItem3","useDispatch","useSelector","addToCart","useMealsQuery","FoodMenuPage","data","error","loading","mealOrder","setMealOrder","useState","dispatch","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","name","price","count","meals","map","cocaCola"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BJ,aAAa,EAA9C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,oBAAoB,GAAGd,KAAK,CAACe,WAAN,CAC1BC,EAAD,IACEL,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,KAACM,EAAD,GAAM,EAAEN,SAAS,CAACM,EAAD;AAFN,GAAD,CAFa,EAM3B,CAACN,SAAD,CAN2B,CAA7B;AASA,QAAMO,uBAAuB,GAAGjB,KAAK,CAACe,WAAN,CAC7BC,EAAD,IAAQ;AACN,QAAIN,SAAS,CAACM,EAAD,CAAT,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AACDL,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACM,EAAD,GAAM,EAAEN,SAAS,CAACM,EAAD;AAFN,KAAD,CAAZ;AAID,GAT6B,EAU9B,CAACN,SAAD,CAV8B,CAAhC,CAdyB,CA2BzB;;AACA,QAAMQ,cAAc,GAAGlB,KAAK,CAACe,WAAN,CACrB,CAACC,EAAD,EAAKG,IAAL,EAAWC,KAAX,KACEP,QAAQ,CAACT,SAAS,CAAC;AAAEY,IAAAA,EAAF;AAAMG,IAAAA,IAAN;AAAYE,IAAAA,KAAK,EAAEX,SAAS,CAACM,EAAD,CAA5B;AAAkCI,IAAAA;AAAlC,GAAD,CAAV,CAFW,EAGrB,CAACV,SAAD,EAAYG,QAAZ,CAHqB,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,cACGN,IADH,aACGA,IADH,uBACGA,IAAI,CAAEe,KAAN,CAAYC,GAAZ,CAAgB,CAAC;AAAEP,MAAAA,EAAF;AAAMG,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACf,QAAC,SAAD;AAEE,MAAA,EAAE,EAAEJ,EAFN;AAGE,MAAA,gBAAgB,EAAEF,oBAHpB;AAIE,MAAA,mBAAmB,EAAEG,uBAJvB;AAKE,MAAA,eAAe,EAAEC,cALnB;AAME,MAAA,IAAI,EAAEC,IANR;AAOE,MAAA,KAAK,EAAET,SAAS,CAACc,QAPnB;AAQE,MAAA,KAAK,EAAEJ;AART,OACOJ,EADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjDD;;GAAMV,Y;UAC6BD,a,EAEhBH,W;;;KAHbI,Y;AAmDN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\n\nconst FoodMenuPage = () => {\n  const { data, error, loading } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const dispatch = useDispatch();\n\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setMealOrder({\n        ...mealOrder,\n        [id]: ++mealOrder[id],\n      }),\n    [mealOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (mealOrder[id] === 0) {\n        return;\n      }\n      setMealOrder({\n        ...mealOrder,\n        [id]: --mealOrder[id],\n      });\n    },\n    [mealOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: mealOrder[id], price })),\n    [mealOrder, dispatch]\n  );\n  return (\n    <div className=\"drinks-menu-page-wrapper\">\n      {data?.meals.map(({ id, name, price }) => (\n        <MenuItem3\n          key={id}\n          id={id}\n          onAddButtonClick={handleAddButtonClick}\n          onRemoveButtonClick={handleRemoveButtonClick}\n          onAddToBagClick={handleAddToBag}\n          name={name}\n          count={mealOrder.cocaCola}\n          price={price}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}