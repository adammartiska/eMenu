{"ast":null,"code":"import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/internal/_makeFlat.js"],"names":["_isArrayLike","_makeFlat","recursive","flatt","list","value","jlen","j","result","idx","ilen","length"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC3C,SAAO,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAC1B,QAAIC,KAAJ,EAAWC,IAAX,EAAiBC,CAAjB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,IAAI,GAAGN,IAAI,CAACO,MAAhB;;AAEA,WAAOF,GAAG,GAAGC,IAAb,EAAmB;AACjB,UAAIV,YAAY,CAACI,IAAI,CAACK,GAAD,CAAL,CAAhB,EAA6B;AAC3BJ,QAAAA,KAAK,GAAGH,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACK,GAAD,CAAL,CAAR,GAAsBL,IAAI,CAACK,GAAD,CAA3C;AACAF,QAAAA,CAAC,GAAG,CAAJ;AACAD,QAAAA,IAAI,GAAGD,KAAK,CAACM,MAAb;;AAEA,eAAOJ,CAAC,GAAGD,IAAX,EAAiB;AACfE,UAAAA,MAAM,CAACA,MAAM,CAACG,MAAR,CAAN,GAAwBN,KAAK,CAACE,CAAD,CAA7B;AACAA,UAAAA,CAAC,IAAI,CAAL;AACD;AACF,OATD,MASO;AACLC,QAAAA,MAAM,CAACA,MAAM,CAACG,MAAR,CAAN,GAAwBP,IAAI,CAACK,GAAD,CAA5B;AACD;;AAEDA,MAAAA,GAAG,IAAI,CAAP;AACD;;AAED,WAAOD,MAAP;AACD,GAxBD;AAyBD","sourcesContent":["import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}"]},"metadata":{},"sourceType":"module"}