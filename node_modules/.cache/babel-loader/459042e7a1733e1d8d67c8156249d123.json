{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\n\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(operation)) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(`Fragment \"${fragName}\" is never used.`, fragmentDef));\n          }\n        }\n      }\n\n    }\n  };\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs"],"names":["GraphQLError","NoUnusedFragmentsRule","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","Object","create","operation","fragment","getRecursivelyReferencedFragments","name","value","fragmentDef","fragName","reportError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,SAAO;AACLC,IAAAA,mBAAmB,CAACC,IAAD,EAAO;AACxBH,MAAAA,aAAa,CAACI,IAAd,CAAmBD,IAAnB;AACA,aAAO,KAAP;AACD,KAJI;;AAMLE,IAAAA,kBAAkB,CAACF,IAAD,EAAO;AACvBF,MAAAA,YAAY,CAACG,IAAb,CAAkBD,IAAlB;AACA,aAAO,KAAP;AACD,KATI;;AAWLG,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,GAAG;AACN,cAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAzB;;AAEA,aAAK,MAAMC,SAAX,IAAwBX,aAAxB,EAAuC;AACrC,eAAK,MAAMY,QAAX,IAAuBb,OAAO,CAACc,iCAAR,CACrBF,SADqB,CAAvB,EAEG;AACDH,YAAAA,gBAAgB,CAACI,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAhB,GAAwC,IAAxC;AACD;AACF;;AAED,aAAK,MAAMC,WAAX,IAA0Bf,YAA1B,EAAwC;AACtC,gBAAMgB,QAAQ,GAAGD,WAAW,CAACF,IAAZ,CAAiBC,KAAlC;;AAEA,cAAIP,gBAAgB,CAACS,QAAD,CAAhB,KAA+B,IAAnC,EAAyC;AACvClB,YAAAA,OAAO,CAACmB,WAAR,CACE,IAAIrB,YAAJ,CACG,aAAYoB,QAAS,kBADxB,EAEED,WAFF,CADF;AAMD;AACF;AACF;;AAxBO;AAXL,GAAP;AAsCD","sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                `Fragment \"${fragName}\" is never used.`,\n                fragmentDef,\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}