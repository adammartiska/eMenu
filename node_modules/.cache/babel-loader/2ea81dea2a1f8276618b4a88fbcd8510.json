{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useDrinks } from \"../hooks/useDrinks\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport \"./drinks-menu-page.scss\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n}; // THESE PRICES WILL BE FETCHED FROM BACKEND\n\nconst COLAPRICE = 12.8;\nconst SPRITEPRICE = 8.2;\nconst TONICPRICE = 2.4;\nconst DRINKS = gql`\n  query GetSpaceX {\n    launchesPast(limit: 10) {\n      mission_name\n      launch_date_local\n      launch_site {\n        site_name_long\n      }\n    }\n  }\n`;\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const {\n    data,\n    error,\n    loading\n  } = useDrinksQuery(); //const { loading, error, data } = useDrinks();\n\n  React.useEffect(() => {\n    console.log(loading);\n    console.log(error);\n    console.log(data);\n  }, [loading, data, error]);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(id => setDrinksOrder({ ...drinksOrder,\n    [id]: ++drinksOrder[id]\n  }), [drinksOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: drinksOrder[id],\n    price\n  })), [drinksOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinks-menu-page-wrapper\",\n    children: data === null || data === void 0 ? void 0 : data.meals.map(meal => /*#__PURE__*/_jsxDEV(MenuItem3, {\n      id: \"cocaCola\",\n      onAddButtonClick: handleAddButtonClick,\n      onRemoveButtonClick: handleRemoveButtonClick,\n      onAddToBagClick: handleAddToBag,\n      name: meal.name,\n      count: drinksOrder.cocaCola,\n      price: meal.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"FKu9mJh9wR4jXXC0WKCcqpPYjhA=\", false, function () {\n  return [useDrinksQuery, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js"],"names":["React","MenuItem3","useDispatch","useSelector","addToCart","useQuery","gql","useDrinks","useDrinksQuery","initialState","cocaCola","sprite","fanta","tonic","COLAPRICE","SPRITEPRICE","TONICPRICE","DRINKS","DrinksMenuPage","data","error","loading","useEffect","console","log","dispatch","drinksOrder","setDrinksOrder","useState","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","name","price","count","meals","map","meal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useDrinks } from \"../hooks/useDrinks\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport \"./drinks-menu-page.scss\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\n// THESE PRICES WILL BE FETCHED FROM BACKEND\nconst COLAPRICE = 12.8;\nconst SPRITEPRICE = 8.2;\nconst TONICPRICE = 2.4;\n\nconst DRINKS = gql`\n  query GetSpaceX {\n    launchesPast(limit: 10) {\n      mission_name\n      launch_date_local\n      launch_site {\n        site_name_long\n      }\n    }\n  }\n`;\n\nconst DrinksMenuPage = () => {\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const { data, error, loading } = useDrinksQuery();\n  //const { loading, error, data } = useDrinks();\n  React.useEffect(() => {\n    console.log(loading);\n    console.log(error);\n    console.log(data);\n  }, [loading, data, error]);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: ++drinksOrder[id],\n      }),\n    [drinksOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: drinksOrder[id], price })),\n    [drinksOrder, dispatch]\n  );\n\n  return (\n    <div className=\"drinks-menu-page-wrapper\">\n      {data?.meals.map((meal) => (\n        <MenuItem3\n          id=\"cocaCola\"\n          onAddButtonClick={handleAddButtonClick}\n          onRemoveButtonClick={handleRemoveButtonClick}\n          onAddToBagClick={handleAddToBag}\n          name={meal.name}\n          count={drinksOrder.cocaCola}\n          price={meal.price}\n        />\n      ))}\n      {/* <MenuItem3\n        id=\"cocaCola\"\n        onAddButtonClick={handleAddButtonClick}\n        onRemoveButtonClick={handleRemoveButtonClick}\n        onAddToBagClick={handleAddToBag}\n        name=\"Coca Cola\"\n        count={drinksOrder.cocaCola}\n        price={COLAPRICE}\n      />\n\n      <MenuItem3\n        id=\"sprite\"\n        onAddButtonClick={handleAddButtonClick}\n        onRemoveButtonClick={handleRemoveButtonClick}\n        onAddToBagClick={handleAddToBag}\n        name=\"Sprite\"\n        count={drinksOrder.sprite}\n        price={SPRITEPRICE}\n      />\n\n      <MenuItem3\n        id=\"tonic\"\n        onAddButtonClick={handleAddButtonClick}\n        onRemoveButtonClick={handleRemoveButtonClick}\n        onAddToBagClick={handleAddToBag}\n        name=\"Tonic\"\n        count={drinksOrder.tonic}\n        price={TONICPRICE}\n      /> */}\n    </div>\n  );\n};\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}