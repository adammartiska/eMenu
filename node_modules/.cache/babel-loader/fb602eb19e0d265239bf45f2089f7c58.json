{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheDrinks } from \"./drinksSlice\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport DrinkCard from \"../components/DrinkCard\";\nimport \"./drinks-menu-page.scss\";\nimport { SwipeableBottomDrawer } from \"../components/SwipeableBottomDrawer\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n};\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  var _drinks;\n\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const {\n    data,\n    error,\n    loading\n  } = useDrinksQuery();\n  const [currentlyOpenedDrinkId, setCurrentlyOpenedDrinkId] = React.useState(null);\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(id => setDrinksOrder({ ...drinksOrder,\n    [id]: ++drinksOrder[id]\n  }), [drinksOrder]);\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheDrinks(drinks));\n  }, [drinks, dispatch]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: drinksOrder[id],\n    price\n  })), [drinksOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinks-menu-page-wrapper\",\n    children: [(_drinks = drinks) === null || _drinks === void 0 ? void 0 : _drinks.drinks.map(_ref => {\n      let {\n        id,\n        name,\n        price\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(DrinkCard, {\n        id: id,\n        onClick: id => {\n          setCurrentlyOpenedDrinkId(id);\n          setShowDrawer(true);\n        },\n        onAddButtonClick: handleAddButtonClick,\n        onRemoveButtonClick: handleRemoveButtonClick,\n        onAddToBagClick: handleAddToBag,\n        title: name,\n        count: drinksOrder.cocaCola,\n        price: price\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SwipeableBottomDrawer, {\n      isMeal: false,\n      showDrawer: showDrawer,\n      setShowDrawer: setShowDrawer,\n      handleAddToBag: handleAddToBag,\n      currentlyOpenedItemId: currentlyOpenedDrinkId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"qCKWeONUn5l19NBF+OTliP604vw=\", false, function () {\n  return [useDrinksQuery, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js"],"names":["React","MenuItem3","useDispatch","useSelector","addToCart","cacheDrinks","useDrinksQuery","DrinkCard","SwipeableBottomDrawer","initialState","cocaCola","sprite","fanta","tonic","DrinksMenuPage","data","error","loading","currentlyOpenedDrinkId","setCurrentlyOpenedDrinkId","useState","showDrawer","setShowDrawer","dispatch","drinksOrder","setDrinksOrder","handleAddButtonClick","useCallback","id","useEffect","drinks","handleRemoveButtonClick","handleAddToBag","name","price","count","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheDrinks } from \"./drinksSlice\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport DrinkCard from \"../components/DrinkCard\";\nimport \"./drinks-menu-page.scss\";\nimport { SwipeableBottomDrawer } from \"../components/SwipeableBottomDrawer\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\nconst DrinksMenuPage = () => {\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const { data, error, loading } = useDrinksQuery();\n  const [currentlyOpenedDrinkId, setCurrentlyOpenedDrinkId] =\n    React.useState(null);\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: ++drinksOrder[id],\n      }),\n    [drinksOrder]\n  );\n\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheDrinks(drinks));\n  }, [drinks, dispatch]);\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: drinksOrder[id], price })),\n    [drinksOrder, dispatch]\n  );\n\n  return (\n    <div className=\"drinks-menu-page-wrapper\">\n      {drinks?.drinks.map(({ id, name, price }) => (\n        <DrinkCard\n          key={id}\n          id={id}\n          onClick={(id) => {\n            setCurrentlyOpenedDrinkId(id);\n            setShowDrawer(true);\n          }}\n          onAddButtonClick={handleAddButtonClick}\n          onRemoveButtonClick={handleRemoveButtonClick}\n          onAddToBagClick={handleAddToBag}\n          title={name}\n          count={drinksOrder.cocaCola}\n          price={price}\n        />\n      ))}\n      <SwipeableBottomDrawer\n        isMeal={false}\n        showDrawer={showDrawer}\n        setShowDrawer={setShowDrawer}\n        handleAddToBag={handleAddToBag}\n        currentlyOpenedItemId={currentlyOpenedDrinkId}\n      />\n    </div>\n  );\n};\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}