{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const toggleDrawer = (open, id = null) => event => {\n    setShowDrawer(open);\n    setCurrentlyOpenedMealId(id);\n  };\n\n  const handleAddButtonClick = React.useCallback(id => setMealOrder({ ...mealOrder,\n    [id]: ++mealOrder[id]\n  }), [mealOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (mealOrder[id] === 0) {\n      return;\n    }\n\n    setMealOrder({ ...mealOrder,\n      [id]: --mealOrder[id]\n    });\n  }, [mealOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: mealOrder[id],\n    price\n  })), [mealOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-menu-page-wrapper\",\n    children: [data === null || data === void 0 ? void 0 : data.meals.map(({\n      id,\n      name,\n      price\n    }) => /*#__PURE__*/_jsxDEV(FoodCard, {\n      id: id // onAddButtonClick={handleAddButtonClick}\n      // onRemoveButtonClick={handleRemoveButtonClick}\n      // onAddToBagClick={handleAddToBag}\n      ,\n      title: name,\n      count: mealOrder.cocaCola,\n      price: price,\n      onClick: toggleDrawer(true, id) //onClick={(id) => console.log(id)}\n\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: \"bottom\",\n        open: showDrawer,\n        onClose: toggleDrawer(false),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250\n          },\n          role: \"presentation\",\n          onClick: toggleDrawer(anchor, false),\n          onKeyDown: toggleDrawer(anchor, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"9vSr1BG6mcRPU2UI6MVz46pa5T4=\", false, function () {\n  return [useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","useDispatch","useSelector","addToCart","useMealsQuery","FoodCard","SwipeableDrawer","FoodMenuPage","data","error","loading","mealOrder","setMealOrder","useState","showDrawer","setShowDrawer","currentlyOpenedMealId","setCurrentlyOpenedMealId","dispatch","toggleDrawer","open","id","event","handleAddButtonClick","useCallback","handleRemoveButtonClick","handleAddToBag","name","price","count","meals","map","cocaCola","width","anchor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\n\nconst FoodMenuPage = () => {\n  const { data, error, loading } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] =\n    React.useState(null);\n  const dispatch = useDispatch();\n\n  const toggleDrawer =\n    (open, id = null) =>\n    (event) => {\n      setShowDrawer(open);\n      setCurrentlyOpenedMealId(id);\n    };\n\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setMealOrder({\n        ...mealOrder,\n        [id]: ++mealOrder[id],\n      }),\n    [mealOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (mealOrder[id] === 0) {\n        return;\n      }\n      setMealOrder({\n        ...mealOrder,\n        [id]: --mealOrder[id],\n      });\n    },\n    [mealOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: mealOrder[id], price })),\n    [mealOrder, dispatch]\n  );\n  return (\n    <div className=\"food-menu-page-wrapper\">\n      {data?.meals.map(({ id, name, price }) => (\n        <FoodCard\n          key={id}\n          id={id}\n          // onAddButtonClick={handleAddButtonClick}\n          // onRemoveButtonClick={handleRemoveButtonClick}\n          // onAddToBagClick={handleAddToBag}\n          title={name}\n          count={mealOrder.cocaCola}\n          price={price}\n          onClick={toggleDrawer(true, id)}\n          //onClick={(id) => console.log(id)}\n        />\n      ))}\n      <React.Fragment>\n        <SwipeableDrawer\n          anchor=\"bottom\"\n          open={showDrawer}\n          onClose={toggleDrawer(false)}\n        >\n          <Box\n            sx={{\n              width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250,\n            }}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n          >\n          </Box>\n        </SwipeableDrawer>\n      </React.Fragment>\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}