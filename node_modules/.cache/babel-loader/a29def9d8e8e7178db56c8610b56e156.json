{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheDrinks } from \"./drinksSlice\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport \"./drinks-menu-page.scss\"; // STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0\n};\n\nconst DrinksMenuPage = () => {\n  _s();\n\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const {\n    data: drinks,\n    error,\n    loading\n  } = useDrinksQuery();\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(id => setDrinksOrder({ ...drinksOrder,\n    [id]: ++drinksOrder[id]\n  }), [drinksOrder]);\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheDrinks(drinks));\n  }, [drinks, dispatch]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (drinksOrder[id] === 0) {\n      return;\n    }\n\n    setDrinksOrder({ ...drinksOrder,\n      [id]: --drinksOrder[id]\n    });\n  }, [drinksOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: drinksOrder[id],\n    price\n  })), [drinksOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinks-menu-page-wrapper\",\n    children: drinks === null || drinks === void 0 ? void 0 : drinks.drinks.map(({\n      id,\n      name,\n      price\n    }) => /*#__PURE__*/_jsxDEV(MenuItem3, {\n      id: id,\n      onAddButtonClick: handleAddButtonClick,\n      onRemoveButtonClick: handleRemoveButtonClick,\n      onAddToBagClick: handleAddToBag,\n      name: name,\n      count: drinksOrder.cocaCola,\n      price: price\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrinksMenuPage, \"vWpXrL6whm/t3Yt2w3e+Lb1FSmg=\", false, function () {\n  return [useDrinksQuery, useDispatch];\n});\n\n_c = DrinksMenuPage;\nexport default DrinksMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinksMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/drinks-menu-page.js"],"names":["React","MenuItem3","useDispatch","useSelector","addToCart","cacheDrinks","useDrinksQuery","initialState","cocaCola","sprite","fanta","tonic","DrinksMenuPage","data","drinks","error","loading","dispatch","drinksOrder","setDrinksOrder","useState","handleAddButtonClick","useCallback","id","useEffect","handleRemoveButtonClick","handleAddToBag","name","price","count","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,eAAvC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAO,yBAAP,C,CAEA;AACA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CADS;AAEnBC,EAAAA,MAAM,EAAE,CAFW;AAGnBC,EAAAA,KAAK,EAAE,CAHY;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAmCV,cAAc,EAAvD;AAEA,QAAMW,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCnB,KAAK,CAACoB,QAAN,CAAeb,YAAf,CAAtC;AACA,QAAMc,oBAAoB,GAAGrB,KAAK,CAACsB,WAAN,CAC1BC,EAAD,IACEJ,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,KAACK,EAAD,GAAM,EAAEL,WAAW,CAACK,EAAD;AAFN,GAAD,CAFW,EAM3B,CAACL,WAAD,CAN2B,CAA7B;AASAlB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpB;AACAP,IAAAA,QAAQ,CAACZ,WAAW,CAACS,MAAD,CAAZ,CAAR;AACD,GAHD,EAGG,CAACA,MAAD,EAASG,QAAT,CAHH;AAKA,QAAMQ,uBAAuB,GAAGzB,KAAK,CAACsB,WAAN,CAC7BC,EAAD,IAAQ;AACN,QAAIL,WAAW,CAACK,EAAD,CAAX,KAAoB,CAAxB,EAA2B;AACzB;AACD;;AACDJ,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,OAACK,EAAD,GAAM,EAAEL,WAAW,CAACK,EAAD;AAFN,KAAD,CAAd;AAID,GAT6B,EAU9B,CAACL,WAAD,CAV8B,CAAhC,CApB2B,CAiC3B;;AACA,QAAMQ,cAAc,GAAG1B,KAAK,CAACsB,WAAN,CACrB,CAACC,EAAD,EAAKI,IAAL,EAAWC,KAAX,KACEX,QAAQ,CAACb,SAAS,CAAC;AAAEmB,IAAAA,EAAF;AAAMI,IAAAA,IAAN;AAAYE,IAAAA,KAAK,EAAEX,WAAW,CAACK,EAAD,CAA9B;AAAoCK,IAAAA;AAApC,GAAD,CAAV,CAFW,EAGrB,CAACV,WAAD,EAAcD,QAAd,CAHqB,CAAvB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,cACGH,MADH,aACGA,MADH,uBACGA,MAAM,CAAEA,MAAR,CAAegB,GAAf,CAAmB,CAAC;AAAEP,MAAAA,EAAF;AAAMI,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBAClB,QAAC,SAAD;AAEE,MAAA,EAAE,EAAEL,EAFN;AAGE,MAAA,gBAAgB,EAAEF,oBAHpB;AAIE,MAAA,mBAAmB,EAAEI,uBAJvB;AAKE,MAAA,eAAe,EAAEC,cALnB;AAME,MAAA,IAAI,EAAEC,IANR;AAOE,MAAA,KAAK,EAAET,WAAW,CAACV,QAPrB;AAQE,MAAA,KAAK,EAAEoB;AART,OACOL,EADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxDD;;GAAMX,c;UAEqCN,c,EAExBJ,W;;;KAJbU,c;AA0DN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport MenuItem3 from \"../components/MenuItem3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheDrinks } from \"./drinksSlice\";\nimport { useDrinksQuery } from \"../generated/graphql\";\nimport \"./drinks-menu-page.scss\";\n\n// STATE SHOULD BE OBJECT WITH KEYS AND THEIR QUANTITY\n// FOR EXAMPLE : { cocaCola: 2 } idk, if we should keep also 0-quantity drinks in the state\nconst initialState = {\n  cocaCola: 0,\n  sprite: 0,\n  fanta: 0,\n  tonic: 0,\n};\n\nconst DrinksMenuPage = () => {\n  //const drinks = useSelector((state) => state.cart.drinks);\n  const { data: drinks, error, loading } = useDrinksQuery();\n\n  const dispatch = useDispatch();\n  const [drinksOrder, setDrinksOrder] = React.useState(initialState);\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: ++drinksOrder[id],\n      }),\n    [drinksOrder]\n  );\n\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheDrinks(drinks));\n  }, [drinks, dispatch]);\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (drinksOrder[id] === 0) {\n        return;\n      }\n      setDrinksOrder({\n        ...drinksOrder,\n        [id]: --drinksOrder[id],\n      });\n    },\n    [drinksOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: drinksOrder[id], price })),\n    [drinksOrder, dispatch]\n  );\n\n  return (\n    <div className=\"drinks-menu-page-wrapper\">\n      {drinks?.drinks.map(({ id, name, price }) => (\n        <MenuItem3\n          key={id}\n          id={id}\n          onAddButtonClick={handleAddButtonClick}\n          onRemoveButtonClick={handleRemoveButtonClick}\n          onAddToBagClick={handleAddToBag}\n          name={name}\n          count={drinksOrder.cocaCola}\n          price={price}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DrinksMenuPage;\n"]},"metadata":{},"sourceType":"module"}