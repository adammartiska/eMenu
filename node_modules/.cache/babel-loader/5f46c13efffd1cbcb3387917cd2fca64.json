{"ast":null,"code":"import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/internal/_xtake.js"],"names":["_curry2","_reduced","_xfBase","XTake","n","xf","i","prototype","init","result","input","ret","_xtake"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,IAAIC,KAAK,GACT,aACA,YAAY;AACV,WAASA,KAAT,CAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACpB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKE,CAAL,GAAS,CAAT;AACD;;AAEDH,EAAAA,KAAK,CAACI,SAAN,CAAgB,mBAAhB,IAAuCL,OAAO,CAACM,IAA/C;AACAL,EAAAA,KAAK,CAACI,SAAN,CAAgB,qBAAhB,IAAyCL,OAAO,CAACO,MAAjD;;AAEAN,EAAAA,KAAK,CAACI,SAAN,CAAgB,mBAAhB,IAAuC,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAC9D,SAAKJ,CAAL,IAAU,CAAV;AACA,QAAIK,GAAG,GAAG,KAAKP,CAAL,KAAW,CAAX,GAAeK,MAAf,GAAwB,KAAKJ,EAAL,CAAQ,mBAAR,EAA6BI,MAA7B,EAAqCC,KAArC,CAAlC;AACA,WAAO,KAAKN,CAAL,IAAU,CAAV,IAAe,KAAKE,CAAL,IAAU,KAAKF,CAA9B,GAAkCH,QAAQ,CAACU,GAAD,CAA1C,GAAkDA,GAAzD;AACD,GAJD;;AAMA,SAAOR,KAAP;AACD,CAjBD,EAFA;;AAqBA,IAAIS,MAAM,GACV,aACAZ,OAAO,CAAC,SAASY,MAAT,CAAgBR,CAAhB,EAAmBC,EAAnB,EAAuB;AAC7B,SAAO,IAAIF,KAAJ,CAAUC,CAAV,EAAaC,EAAb,CAAP;AACD,CAFM,CAFP;;AAMA,eAAeO,MAAf","sourcesContent":["import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;"]},"metadata":{},"sourceType":"module"}