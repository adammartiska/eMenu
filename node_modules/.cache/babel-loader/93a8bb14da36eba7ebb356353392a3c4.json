{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport burgerUrl from \"../static/burger.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const dispatch = useDispatch();\n  const handleAddButtonClick = React.useCallback(id => setMealOrder({ ...mealOrder,\n    [id]: ++mealOrder[id]\n  }), [mealOrder]);\n  const handleRemoveButtonClick = React.useCallback(id => {\n    if (mealOrder[id] === 0) {\n      return;\n    }\n\n    setMealOrder({ ...mealOrder,\n      [id]: --mealOrder[id]\n    });\n  }, [mealOrder]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback((id, name, price) => dispatch(addToCart({\n    id,\n    name,\n    count: mealOrder[id],\n    price\n  })), [mealOrder, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-menu-page-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(FoodCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"Nz3VYhoHucxFxTmenamZ8gMA2Eo=\", false, function () {\n  return [useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","useDispatch","useSelector","Card","Box","CardContent","CardMedia","Typography","addToCart","useMealsQuery","FoodCard","burgerUrl","FoodMenuPage","data","error","loading","mealOrder","setMealOrder","useState","dispatch","handleAddButtonClick","useCallback","id","handleRemoveButtonClick","handleAddToBag","name","price","count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,aAAa,EAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,oBAAoB,GAAGpB,KAAK,CAACqB,WAAN,CAC1BC,EAAD,IACEL,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,KAACM,EAAD,GAAM,EAAEN,SAAS,CAACM,EAAD;AAFN,GAAD,CAFa,EAM3B,CAACN,SAAD,CAN2B,CAA7B;AASA,QAAMO,uBAAuB,GAAGvB,KAAK,CAACqB,WAAN,CAC7BC,EAAD,IAAQ;AACN,QAAIN,SAAS,CAACM,EAAD,CAAT,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AACDL,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACM,EAAD,GAAM,EAAEN,SAAS,CAACM,EAAD;AAFN,KAAD,CAAZ;AAID,GAT6B,EAU9B,CAACN,SAAD,CAV8B,CAAhC,CAdyB,CA2BzB;;AACA,QAAMQ,cAAc,GAAGxB,KAAK,CAACqB,WAAN,CACrB,CAACC,EAAD,EAAKG,IAAL,EAAWC,KAAX,KACEP,QAAQ,CAACX,SAAS,CAAC;AAAEc,IAAAA,EAAF;AAAMG,IAAAA,IAAN;AAAYE,IAAAA,KAAK,EAAEX,SAAS,CAACM,EAAD,CAA5B;AAAkCI,IAAAA;AAAlC,GAAD,CAAV,CAFW,EAGrB,CAACV,SAAD,EAAYG,QAAZ,CAHqB,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BAaE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlDD;;GAAMP,Y;UAC6BH,a,EAEhBR,W;;;KAHbW,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { addToCart } from \"./drinksSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport burgerUrl from \"../static/burger.jpeg\";\n\nconst FoodMenuPage = () => {\n  const { data, error, loading } = useMealsQuery();\n  const [mealOrder, setMealOrder] = React.useState({});\n  const dispatch = useDispatch();\n\n  const handleAddButtonClick = React.useCallback(\n    (id) =>\n      setMealOrder({\n        ...mealOrder,\n        [id]: ++mealOrder[id],\n      }),\n    [mealOrder]\n  );\n\n  const handleRemoveButtonClick = React.useCallback(\n    (id) => {\n      if (mealOrder[id] === 0) {\n        return;\n      }\n      setMealOrder({\n        ...mealOrder,\n        [id]: --mealOrder[id],\n      });\n    },\n    [mealOrder]\n  );\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    (id, name, price) =>\n      dispatch(addToCart({ id, name, count: mealOrder[id], price })),\n    [mealOrder, dispatch]\n  );\n  return (\n    <div className=\"food-menu-page-wrapper\">\n      {/* {data?.meals.map(({ id, name, price }) => (\n        <MenuItem3\n          key={id}\n          id={id}\n          onAddButtonClick={handleAddButtonClick}\n          onRemoveButtonClick={handleRemoveButtonClick}\n          onAddToBagClick={handleAddToBag}\n          name={name}\n          count={mealOrder.cocaCola}\n          price={price}\n        />\n      ))} */}\n      <FoodCard />\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}