{"ast":null,"code":"import { invariant } from '../jsutils/invariant.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { executeSync } from '../execution/execute.mjs';\nimport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options\n  };\n  const document = parse(getIntrospectionQuery(optionsWithDefaults));\n  const result = executeSync({\n    schema,\n    document\n  });\n  !result.errors && result.data || invariant(false);\n  return result.data;\n}","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/graphql/utilities/introspectionFromSchema.mjs"],"names":["invariant","parse","executeSync","getIntrospectionQuery","introspectionFromSchema","schema","options","optionsWithDefaults","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputValueDeprecation","document","result","errors","data"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,qBAAT,QAAsC,6BAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,OAAzC,EAAkD;AACvD,QAAMC,mBAAmB,GAAG;AAC1BC,IAAAA,cAAc,EAAE,IADU;AAE1BC,IAAAA,qBAAqB,EAAE,IAFG;AAG1BC,IAAAA,iBAAiB,EAAE,IAHO;AAI1BC,IAAAA,qBAAqB,EAAE,IAJG;AAK1B,OAAGL;AALuB,GAA5B;AAOA,QAAMM,QAAQ,GAAGX,KAAK,CAACE,qBAAqB,CAACI,mBAAD,CAAtB,CAAtB;AACA,QAAMM,MAAM,GAAGX,WAAW,CAAC;AACzBG,IAAAA,MADyB;AAEzBO,IAAAA;AAFyB,GAAD,CAA1B;AAIC,GAACC,MAAM,CAACC,MAAR,IAAkBD,MAAM,CAACE,IAA1B,IAAmCf,SAAS,CAAC,KAAD,CAA5C;AACA,SAAOa,MAAM,CAACE,IAAd;AACD","sourcesContent":["import { invariant } from '../jsutils/invariant.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { executeSync } from '../execution/execute.mjs';\nimport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = parse(getIntrospectionQuery(optionsWithDefaults));\n  const result = executeSync({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || invariant(false);\n  return result.data;\n}\n"]},"metadata":{},"sourceType":"module"}