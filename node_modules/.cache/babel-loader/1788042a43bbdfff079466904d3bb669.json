{"ast":null,"code":"import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/internal/_xdrop.js"],"names":["_curry2","_xfBase","XDrop","n","xf","prototype","init","result","input","_xdrop"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,IAAIC,KAAK,GACT,aACA,YAAY;AACV,WAASA,KAAT,CAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACpB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACD;;AAEDD,EAAAA,KAAK,CAACG,SAAN,CAAgB,mBAAhB,IAAuCJ,OAAO,CAACK,IAA/C;AACAJ,EAAAA,KAAK,CAACG,SAAN,CAAgB,qBAAhB,IAAyCJ,OAAO,CAACM,MAAjD;;AAEAL,EAAAA,KAAK,CAACG,SAAN,CAAgB,mBAAhB,IAAuC,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AAC9D,QAAI,KAAKL,CAAL,GAAS,CAAb,EAAgB;AACd,WAAKA,CAAL,IAAU,CAAV;AACA,aAAOI,MAAP;AACD;;AAED,WAAO,KAAKH,EAAL,CAAQ,mBAAR,EAA6BG,MAA7B,EAAqCC,KAArC,CAAP;AACD,GAPD;;AASA,SAAON,KAAP;AACD,CAnBD,EAFA;;AAuBA,IAAIO,MAAM,GACV,aACAT,OAAO,CAAC,SAASS,MAAT,CAAgBN,CAAhB,EAAmBC,EAAnB,EAAuB;AAC7B,SAAO,IAAIF,KAAJ,CAAUC,CAAV,EAAaC,EAAb,CAAP;AACD,CAFM,CAFP;;AAMA,eAAeK,MAAf","sourcesContent":["import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;"]},"metadata":{},"sourceType":"module"}