{"ast":null,"code":"var _jsxFileName = \"/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheMeals } from \"./mealsSlice\";\nimport { addMealToCart } from \"./orderSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport { find } from \"ramda\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport { SwipeableBottomDrawer } from \"../components/SwipeableBottomDrawer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FoodMenuPage = () => {\n  _s();\n\n  const {\n    data: meals,\n    error,\n    loading\n  } = useMealsQuery();\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] = React.useState(null);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheMeals(meals));\n  }, [meals, dispatch]); //TODO ADD some kind of user notification that items were added into cart\n\n  const handleAddToBag = React.useCallback(_ref => {\n    let {\n      id,\n      count,\n      additionalOrderInfo\n    } = _ref;\n    dispatch(addMealToCart({\n      id,\n      count,\n      additionalOrderInfo: additionalOrderInfo !== null && additionalOrderInfo !== void 0 ? additionalOrderInfo : undefined\n    }));\n    setShowDrawer(false);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food-menu-page-wrapper\",\n    children: [meals === null || meals === void 0 ? void 0 : meals.meals.map(_ref2 => {\n      let {\n        id,\n        name,\n        price\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FoodCard, {\n        id: id,\n        title: name,\n        price: price,\n        onClick: id => {\n          setCurrentlyOpenedMealId(id);\n          setShowDrawer(true);\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SwipeableBottomDrawer, {\n      isMeal: true,\n      image: true,\n      showDrawer: showDrawer,\n      setShowDrawer: setShowDrawer,\n      handleAddToBag: handleAddToBag,\n      currentlyOpenedItemId: currentlyOpenedMealId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FoodMenuPage, \"x4w52LVf1tx6yIEfSiKHDIlac7A=\", false, function () {\n  return [useMealsQuery, useDispatch];\n});\n\n_c = FoodMenuPage;\nexport default FoodMenuPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodMenuPage\");","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/src/pages/food-menu-page.js"],"names":["React","useDispatch","useSelector","addToCart","cacheMeals","addMealToCart","useMealsQuery","find","FoodCard","SwipeableBottomDrawer","FoodMenuPage","data","meals","error","loading","showDrawer","setShowDrawer","useState","currentlyOpenedMealId","setCurrentlyOpenedMealId","dispatch","useEffect","handleAddToBag","useCallback","id","count","additionalOrderInfo","undefined","map","name","price"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,qBAAT,QAAsC,qCAAtC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAkCR,aAAa,EAArD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IACJnB,KAAK,CAACiB,QAAN,CAAe,IAAf,CADF;AAEA,QAAMG,QAAQ,GAAGnB,WAAW,EAA5B;AAEAD,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB;AACAD,IAAAA,QAAQ,CAAChB,UAAU,CAACQ,KAAD,CAAX,CAAR;AACD,GAHD,EAGG,CAACA,KAAD,EAAQQ,QAAR,CAHH,EAPyB,CAYzB;;AACA,QAAME,cAAc,GAAGtB,KAAK,CAACuB,WAAN,CACrB,QAAwC;AAAA,QAAvC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAuC;AACtCN,IAAAA,QAAQ,CACNf,aAAa,CAAC;AACZmB,MAAAA,EADY;AAEZC,MAAAA,KAFY;AAGZC,MAAAA,mBAAmB,EAAEA,mBAAF,aAAEA,mBAAF,cAAEA,mBAAF,GAAyBC;AAHhC,KAAD,CADP,CAAR;AAOAX,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAVoB,EAWrB,CAACI,QAAD,CAXqB,CAAvB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,eACGR,KADH,aACGA,KADH,uBACGA,KAAK,CAAEA,KAAP,CAAagB,GAAb,CAAiB;AAAA,UAAC;AAAEJ,QAAAA,EAAF;AAAMK,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BAChB,QAAC,QAAD;AAEE,QAAA,EAAE,EAAEN,EAFN;AAGE,QAAA,KAAK,EAAEK,IAHT;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,OAAO,EAAGN,EAAD,IAAQ;AACfL,UAAAA,wBAAwB,CAACK,EAAD,CAAxB;AACAR,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AARH,SACOQ,EADP;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA,KAAjB,CADH,eAaE,QAAC,qBAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,UAAU,EAAET,UAHd;AAIE,MAAA,aAAa,EAAEC,aAJjB;AAKE,MAAA,cAAc,EAAEM,cALlB;AAME,MAAA,qBAAqB,EAAEJ;AANzB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAlDD;;GAAMR,Y;UACoCJ,a,EAIvBL,W;;;KALbS,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, cacheMeals } from \"./mealsSlice\";\nimport { addMealToCart } from \"./orderSlice\";\nimport { useMealsQuery } from \"../generated/graphql\";\nimport { find } from \"ramda\";\nimport \"./food-menu-page.scss\";\nimport FoodCard from \"../components/FoodCard\";\nimport { SwipeableBottomDrawer } from \"../components/SwipeableBottomDrawer\";\n\nconst FoodMenuPage = () => {\n  const { data: meals, error, loading } = useMealsQuery();\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const [currentlyOpenedMealId, setCurrentlyOpenedMealId] =\n    React.useState(null);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    // cache meals once its data is loaded\n    dispatch(cacheMeals(meals));\n  }, [meals, dispatch]);\n\n  //TODO ADD some kind of user notification that items were added into cart\n  const handleAddToBag = React.useCallback(\n    ({ id, count, additionalOrderInfo }) => {\n      dispatch(\n        addMealToCart({\n          id,\n          count,\n          additionalOrderInfo: additionalOrderInfo ?? undefined,\n        })\n      );\n      setShowDrawer(false);\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"food-menu-page-wrapper\">\n      {meals?.meals.map(({ id, name, price }) => (\n        <FoodCard\n          key={id}\n          id={id}\n          title={name}\n          price={price}\n          onClick={(id) => {\n            setCurrentlyOpenedMealId(id);\n            setShowDrawer(true);\n          }}\n        />\n      ))}\n      <SwipeableBottomDrawer\n        isMeal\n        image\n        showDrawer={showDrawer}\n        setShowDrawer={setShowDrawer}\n        handleAddToBag={handleAddToBag}\n        currentlyOpenedItemId={currentlyOpenedMealId}\n      />\n    </div>\n  );\n};\n\nexport default FoodMenuPage;\n"]},"metadata":{},"sourceType":"module"}