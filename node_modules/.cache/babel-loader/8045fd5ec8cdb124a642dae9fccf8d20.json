{"ast":null,"code":"import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","map":{"version":3,"sources":["/Users/adammartiska/Projects/eMenu/GUI/eMenu-customer/node_modules/ramda/es/internal/_xfindIndex.js"],"names":["_curry2","_reduced","_xfBase","XFindIndex","f","xf","idx","found","prototype","init","result","input","_xfindIndex"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,IAAIC,UAAU,GACd,aACA,YAAY;AACV,WAASA,UAAT,CAAoBC,CAApB,EAAuBC,EAAvB,EAA2B;AACzB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKE,GAAL,GAAW,CAAC,CAAZ;AACA,SAAKC,KAAL,GAAa,KAAb;AACD;;AAEDJ,EAAAA,UAAU,CAACK,SAAX,CAAqB,mBAArB,IAA4CN,OAAO,CAACO,IAApD;;AAEAN,EAAAA,UAAU,CAACK,SAAX,CAAqB,qBAArB,IAA8C,UAAUE,MAAV,EAAkB;AAC9D,QAAI,CAAC,KAAKH,KAAV,EAAiB;AACfG,MAAAA,MAAM,GAAG,KAAKL,EAAL,CAAQ,mBAAR,EAA6BK,MAA7B,EAAqC,CAAC,CAAtC,CAAT;AACD;;AAED,WAAO,KAAKL,EAAL,CAAQ,qBAAR,EAA+BK,MAA/B,CAAP;AACD,GAND;;AAQAP,EAAAA,UAAU,CAACK,SAAX,CAAqB,mBAArB,IAA4C,UAAUE,MAAV,EAAkBC,KAAlB,EAAyB;AACnE,SAAKL,GAAL,IAAY,CAAZ;;AAEA,QAAI,KAAKF,CAAL,CAAOO,KAAP,CAAJ,EAAmB;AACjB,WAAKJ,KAAL,GAAa,IAAb;AACAG,MAAAA,MAAM,GAAGT,QAAQ,CAAC,KAAKI,EAAL,CAAQ,mBAAR,EAA6BK,MAA7B,EAAqC,KAAKJ,GAA1C,CAAD,CAAjB;AACD;;AAED,WAAOI,MAAP;AACD,GATD;;AAWA,SAAOP,UAAP;AACD,CA9BD,EAFA;;AAkCA,IAAIS,WAAW,GACf,aACAZ,OAAO,CAAC,SAASY,WAAT,CAAqBR,CAArB,EAAwBC,EAAxB,EAA4B;AAClC,SAAO,IAAIF,UAAJ,CAAeC,CAAf,EAAkBC,EAAlB,CAAP;AACD,CAFM,CAFP;;AAMA,eAAeO,WAAf","sourcesContent":["import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;"]},"metadata":{},"sourceType":"module"}