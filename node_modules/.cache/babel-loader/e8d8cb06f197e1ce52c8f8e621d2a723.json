{"ast":null,"code":"import global from \"./global.js\";\nimport { maybe } from \"./maybe.js\";\nvar __ = \"__\";\nvar GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch (_a) {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      value: maybe(function () {\n        return process.env.NODE_ENV;\n      }) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n    return global[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();","map":{"version":3,"sources":["../../../src/utilities/globals/DEV.ts"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,aAAnB;AACA,SAAS,KAAT,QAAsB,YAAtB;AAKA,IAAM,EAAE,GAAG,IAAX;AACA,IAAM,UAAU,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,IAAT,CAAc,KAAd,CAAnB;;AAEA,SAAS,MAAT,GAAe;AACb,MAAI;AACF,WAAO,OAAO,CAAC,OAAD,CAAd;AACD,GAFD,CAEE,OAAA,EAAA,EAAM;AACN,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,UAA9B,EAA0C;AAIxC,MAAA,KAAK,EAAE,KAAK,CAAC,YAAA;AAAM,eAAA,OAAO,CAAC,GAAR,CAAA,QAAA;AAAoB,OAA3B,CAAL,KAAsC,YAJL;AAKxC,MAAA,UAAU,EAAE,KAL4B;AAMxC,MAAA,YAAY,EAAE,IAN0B;AAOxC,MAAA,QAAQ,EAAE;AAP8B,KAA1C;AAWA,WAAQ,MAAc,CAAC,UAAD,CAAtB;AACD;AACF;;AAED,eAAe,MAAM,EAArB","sourcesContent":["import global from \"./global\";\nimport { maybe } from \"./maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}